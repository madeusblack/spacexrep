{"version":3,"sources":["Hooks/useInitialState.js","components/CardContainer.jsx","components/YoutubeIframe.jsx","components/LaunchCard.jsx","containers/Home.jsx","containers/NotFound.jsx","components/Header.jsx","components/Layout.jsx","components/Page.jsx","actions/index.js","components/ItemsPerPage.jsx","components/PageNumber.jsx","components/Paginator.jsx","components/Container.jsx","containers/Browse.jsx","routes/App.js","reducers/index.js","serviceWorker.js","index.js"],"names":["useInitialState","API","useState","info","setInfo","useEffect","fetch","then","response","json","data","CardContainer","children","className","YoutubeIframe","source","url","src","frameBorder","allow","allowFullScreen","LaunchCard","title","mission_name","launch_date_utc","links","site_name_long","details","date","Date","launchDate","toDateString","mission_patch","alt","youtube_id","Home","lastest","next","key","id","NotFound","href","Header","to","Layout","Page","actualitem","numberOfPage","numberOfItems","launches","cards","i","undefined","flight_number","console","log","push","setPage","payload","type","mapDispathToProps","setItems","connect","props","newNumberOfItems","onClick","number","Paginator","itemsPage","pages","totalItems","numberOfPages","Math","ceil","Container","state","itemsPerPage","actualPage","launchList","isData","maxItems","App","path","exact","component","Browse","reducer","action","Boolean","window","location","hostname","match","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a0f5b0c4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nconst useInitialState = (API) => {\r\n  const [info, setInfo] = useState({'isData':false\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetch(API)\r\n      .then((response) => response.json())\r\n      .then((data) => setInfo(data));\r\n      ;\r\n  }, []);\r\n  return info;\r\n};\r\n\r\nexport default useInitialState;\r\n","import React from 'react';\r\nimport '../assets/styles/components/CardContainer.scss';\r\n\r\nconst CardContainer = ({ children }) => (\r\n  <section className='cardContainer'>\r\n    {children}\r\n  </section>\r\n);\r\nexport default CardContainer;\r\n","/* eslint-disable camelcase */\r\nimport React from 'react';\r\nimport '../assets/styles/components/YoutubeIframe.scss';\r\n\r\nconst YoutubeIframe = ({ source }) => {\r\n  const url = `https://www.youtube.com/embed/${source}`;\r\n  return (\r\n  // eslint-disable-next-line jsx-a11y/iframe-has-title\r\n    <iframe src={url} frameBorder='0' allow='accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture' allowFullScreen />);\r\n};\r\nexport default YoutubeIframe;\r\n","/* eslint-disable camelcase */\nimport React from 'react';\nimport YoutubeIframe from './YoutubeIframe';\nimport '../assets/styles/components/LaunchCard.scss';\n\nconst LaunchCard = ({ title, mission_name, launch_date_utc, links, site_name_long, details }) => {\n  const date = new Date(launch_date_utc);\n  const launchDate = `Launch Date: ${date.toDateString()}`;\n  return (\n    <div className='launchCard'>\n      {title && (\n        <h2 className='cardTitle'>{title}</h2>\n      )}\n      <h4 className='missionName'>{mission_name}</h4>\n      <img className='missionPatch' src={links.mission_patch} alt='mission patch' />\n      <h5 className='missionDate'>{launchDate}</h5>\n      <YoutubeIframe source={links.youtube_id} />\n      <h5 className='launchSite'>{site_name_long}</h5>\n      <p className='aboutThisMission'>{details}</p>\n    </div>\n  );\n};\n\nexport default LaunchCard;\n","/* eslint-disable no-else-return */\nimport React from 'react';\nimport useInitialState from '../Hooks/useInitialState';\nimport '../assets/styles/App.scss';\nimport CardContainer from '../components/CardContainer';\nimport LaunchCard from '../components/LaunchCard';\n\nconst API = 'https://api.spacexdata.com/v3/launches';\nconst Home = () => {\n  const lastest = useInitialState(`${API}/latest`);\n  const next = useInitialState(`${API}/next`);\n\n  if (lastest.mission_name && next.mission_name) {\n    return (\n      <>\n        <CardContainer>\n          <LaunchCard key={lastest.id} {...lastest} />\n          <LaunchCard key={next.id} {...next} />\n        </CardContainer>\n      </>\n    );\n  } else {\n    return (\n      <h1>Loading...</h1>\n    );\n  }\n};\nexport default Home;\n","import React from 'react';\r\n\r\nconst NotFound = () => (\r\n  <>\r\n    <h1>No se hizo la encontraci√≥n </h1>\r\n    <a href='/'>Vuelve al inicio viteh</a>\r\n  </>\r\n);\r\nexport default NotFound;\r\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../assets/styles/components/Header.scss';\n\nconst Header = () => (\n  <header className='header'>\n    <div className='header__container'>\n      <Link to='/'>HOME</Link>\n      <Link to='/browse'>BROWSE</Link>\n      <Link to='/about'>ABOUT THIS PROJECT</Link>\n    </div>\n  </header>\n);\nexport default Header;\n","import React from 'react';\r\nimport Header from './Header';\r\n\r\nconst Layout = ({ children }) => (\r\n  <div className='App'>\r\n    <Header />\r\n    {children}\r\n  </div>\r\n);\r\nexport default Layout;\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React from 'react';\r\nimport LaunchCard from './LaunchCard';\r\nimport CardContainer from './CardContainer';\r\n\r\nconst Page = ({ numberOfPage, numberOfItems, launches }) => {\r\n  let actualitem;\r\n  const cards = []; \r\n  if (launches[0]) {\r\n    if (numberOfPage > 1) {\r\n      actualitem = (numberOfPage-1) * numberOfItems;\r\n\r\n\r\n    } else {\r\n      actualitem = numberOfPage;\r\n\r\n    }\r\n    for (let i = 0;i < numberOfItems; i++) {\r\n      if(launches[actualitem].flight_number!==undefined){\r\n        console.log(actualitem)\r\n\r\n        cards.push(<LaunchCard key={launches[actualitem].flight_number} {...launches[actualitem]} />);}\r\n      actualitem++;\r\n    }\r\n  }\r\n \r\n    return (\r\n      <CardContainer>\r\n        {cards}\r\n      </CardContainer>\r\n    );\r\n  \r\n};\r\nexport default Page;\r\n","export const setPage = payload => ({\r\n    type: 'SWITCH_PAGE',\r\n    payload,\r\n});\r\nexport const setItems = payload => ({\r\n    type: 'SET_ITEMS_PER_PAGE',\r\n    payload,\r\n});\r\n","/* eslint-disable react/jsx-closing-bracket-location */\r\n/* eslint-disable react/jsx-one-expression-per-line */\r\n/* eslint-disable prefer-destructuring */\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setItems, setPage } from '../actions/index';\r\nimport '../assets/styles/components/ItemsPerPage.scss';\r\n\r\nconst ItemsPerPage = (props) => {\r\n  const {numberOfItems} = props\r\n  let newNumberOfItems;\r\n  const handleSetItems = () => {\r\n    if (props.numberOfItems === 20) {\r\n      newNumberOfItems=props.numberOfItems - 10;\r\n    } else {\r\n      newNumberOfItems=props.numberOfItems + 10;\r\n    }\r\n    props.setItems(newNumberOfItems)\r\n    props.setPage(1)\r\n  }\r\n\r\n  return (\r\n      <h6 className='itemsPerPage' onClick={handleSetItems}>\r\n        Items per Page: {numberOfItems}\r\n      </h6>\r\n  );\r\n};\r\nconst mapDispathToProps = {\r\n  setItems,setPage\r\n\r\n}\r\n\r\nexport default connect(null,mapDispathToProps)(ItemsPerPage);\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setPage } from '../actions/index';\r\n\r\nconst PageNumber = ( props ) => {\r\n  const {number} = props\r\n  const handleSetPage = () => {\r\n    props.setPage(number)\r\n  }\r\n  return(\r\n    <>\r\n      <h6 onClick={handleSetPage}>{ props.number }</h6>\r\n    </>\r\n  );\r\n};\r\nconst mapDispathToProps = {\r\n   setPage,\r\n}\r\nexport default connect(null,mapDispathToProps)(PageNumber);\r\n","import React from 'react';\r\nimport PageNumber from './PageNumber';\r\nimport '../assets/styles/components/Paginator.scss';\r\nimport useInitialState from '../Hooks/useInitialState';\r\n\r\nconst API = 'https://api.spacexdata.com/v3/launches';\r\n\r\nconst Paginator = ({ itemsPage }) => {\r\n  const pages = [];\r\n  let isReady = false;\r\n  const lastest = useInitialState(`${API}/latest`);\r\n  const totalItems = lastest.flight_number;\r\n  const numberOfPages = Math.ceil(totalItems / itemsPage)\r\n  for (let i = 1;i <= numberOfPages ;i++) {\r\n    pages.push(<PageNumber key={i.id} number={i} />);\r\n  }\r\n  isReady = true;\r\n  if (isReady) {\r\n    return (\r\n      <div className='pagesContainer'>\r\n        {pages}\r\n      </div>\r\n    );\r\n  // eslint-disable-next-line no-else-return\r\n  } else {\r\n    return (\r\n      <h1>Loading...</h1>\r\n    );\r\n  }\r\n\r\n};\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport '../assets/styles/components/Container.scss';\r\n\r\nconst Container = ({children}) => (\r\n    <div className='container'>\r\n        {children}\r\n    </div>\r\n);\r\nexport default Container;","/* eslint-disable no-else-return */\r\nimport React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport '../assets/styles/App.scss';\r\nimport Page from '../components/Page';\r\nimport ItemsPerPage from '../components/ItemsPerPage';\r\nimport useInitialState from '../Hooks/useInitialState';\r\nimport Paginator from '../components/Paginator';\r\nimport Container from '../components/Container';\r\n\r\n\r\nconst API = 'https://api.spacexdata.com/v3/launches';\r\nconst Browse = ({itemsPerPage,actualPage,totalItems}) => {\r\n  const launchList = useInitialState(API);\r\n  if (launchList.isData!==false){ \r\n  return(\r\n  <>\r\n    <Container>\r\n      <ItemsPerPage numberOfItems={itemsPerPage} />\r\n      <Paginator itemsPage={itemsPerPage} />\r\n    </Container>\r\n    <Page numberOfPage={actualPage} numberOfItems={itemsPerPage} launches={launchList} maxItems={totalItems} />\r\n    <Container>\r\n      <Paginator itemsPage={itemsPerPage} />\r\n      <ItemsPerPage numberOfItems={itemsPerPage} />\r\n\r\n    </Container>\r\n  </>\r\n)}else{\r\n  return(\r\n    <h1>Loading</h1>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = state => {\r\n  return {\r\n    itemsPerPage: state.itemsPerPage,\r\n    actualPage: state.actualPage,\r\n    totalItems: state.totalItems,\r\n\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Browse);","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport Home from '../containers/Home';\r\nimport NotFound from '../containers/NotFound';\r\nimport Layout from '../components/Layout';\r\nimport Browse from '../containers/Browse';\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <Layout>\r\n      <Switch>\r\n        <Route path='/' exact component={Home} />\r\n        <Route path='/browse' exact component={Browse} />\r\n        <Route path='*' component={NotFound} />\r\n      </Switch>\r\n    </Layout>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","const reducer = (state, action)=>{\r\n    switch (action.type) {\r\n        case 'SWITCH_PAGE':\r\n            return{\r\n                \r\n                ...state,\r\n                actualPage: action.payload,\r\n            }\r\n        case 'SET_ITEMS_PER_PAGE':\r\n\r\n            return{\r\n                ...state,\r\n                itemsPerPage: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n} \r\nexport default reducer;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './routes/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './reducers/index';\nimport * as serviceWorker from './serviceWorker';\n\n\nconst initialState = {\n  'itemsPerPage': 10,\n  'actualPage': 1,\n  'totalItems': 96,\n}\nconst store = createStore(reducer, initialState)\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}